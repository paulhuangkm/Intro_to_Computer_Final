function Tower.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 2
push constant 0
pop this 3
push constant 0
pop this 4
push argument 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 137
pop this 0
push constant 206
pop this 1
label IF_FALSE0
push argument 0
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 169
pop this 0
push constant 151
pop this 1
label IF_FALSE1
push argument 0
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 201
pop this 0
push constant 206
pop this 1
label IF_FALSE2
push argument 0
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 201
pop this 0
push constant 63
pop this 1
label IF_FALSE3
push argument 0
push constant 5
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 289
pop this 0
push constant 206
pop this 1
label IF_FALSE4
push argument 0
push constant 6
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 289
pop this 0
push constant 63
pop this 1
label IF_FALSE5
push argument 0
push constant 7
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 313
pop this 0
push constant 151
pop this 1
label IF_FALSE6
push argument 0
push constant 8
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 345
pop this 0
push constant 206
pop this 1
label IF_FALSE7
push pointer 0
return
function Tower.printStatus 0
push argument 0
pop pointer 0
push constant 0
push constant 50
call Output.moveCursor 2
pop temp 0
push constant 76
call Output.printChar 1
pop temp 0
push constant 111
call Output.printChar 1
pop temp 0
push constant 99
call Output.printChar 1
pop temp 0
push constant 97
call Output.printChar 1
pop temp 0
push constant 116
call Output.printChar 1
pop temp 0
push constant 105
call Output.printChar 1
pop temp 0
push constant 111
call Output.printChar 1
pop temp 0
push constant 110
call Output.printChar 1
pop temp 0
push constant 58
call Output.printChar 1
pop temp 0
push constant 32
call Output.printChar 1
pop temp 0
push argument 1
call Output.printInt 1
pop temp 0
push constant 1
push constant 50
call Output.moveCursor 2
pop temp 0
push constant 67
call Output.printChar 1
pop temp 0
push constant 111
call Output.printChar 1
pop temp 0
push constant 115
call Output.printChar 1
pop temp 0
push constant 116
call Output.printChar 1
pop temp 0
push constant 58
call Output.printChar 1
pop temp 0
push constant 32
call Output.printChar 1
pop temp 0
push pointer 0
call Tower.cost 1
call Output.printInt 1
pop temp 0
push constant 2
push constant 50
call Output.moveCursor 2
pop temp 0
push constant 76
call Output.printChar 1
pop temp 0
push constant 101
call Output.printChar 1
pop temp 0
push constant 118
call Output.printChar 1
pop temp 0
push constant 101
call Output.printChar 1
pop temp 0
push constant 108
call Output.printChar 1
pop temp 0
push constant 58
call Output.printChar 1
pop temp 0
push constant 32
call Output.printChar 1
pop temp 0
push this 3
call Output.printInt 1
pop temp 0
push constant 3
push constant 50
call Output.moveCursor 2
pop temp 0
push constant 84
call Output.printChar 1
pop temp 0
push constant 121
call Output.printChar 1
pop temp 0
push constant 112
call Output.printChar 1
pop temp 0
push constant 101
call Output.printChar 1
pop temp 0
push constant 58
call Output.printChar 1
pop temp 0
push constant 32
call Output.printChar 1
pop temp 0
push this 3
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 78
call Output.printChar 1
pop temp 0
push constant 111
call Output.printChar 1
pop temp 0
push constant 110
call Output.printChar 1
pop temp 0
push constant 101
call Output.printChar 1
pop temp 0
push constant 32
call Output.printChar 1
pop temp 0
push constant 32
call Output.printChar 1
pop temp 0
label IF_FALSE0
push this 2
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 67
call Output.printChar 1
pop temp 0
push constant 97
call Output.printChar 1
pop temp 0
push constant 110
call Output.printChar 1
pop temp 0
push constant 110
call Output.printChar 1
pop temp 0
push constant 111
call Output.printChar 1
pop temp 0
push constant 110
call Output.printChar 1
pop temp 0
label IF_FALSE1
push constant 4
push constant 50
call Output.moveCursor 2
pop temp 0
push constant 80
call Output.printChar 1
pop temp 0
push constant 114
call Output.printChar 1
pop temp 0
push constant 101
call Output.printChar 1
pop temp 0
push constant 115
call Output.printChar 1
pop temp 0
push constant 115
call Output.printChar 1
pop temp 0
push constant 32
call Output.printChar 1
pop temp 0
push constant 66
call Output.printChar 1
pop temp 0
push constant 32
call Output.printChar 1
pop temp 0
push constant 116
call Output.printChar 1
pop temp 0
push constant 111
call Output.printChar 1
pop temp 0
push constant 32
call Output.printChar 1
pop temp 0
push constant 98
call Output.printChar 1
pop temp 0
push constant 117
call Output.printChar 1
pop temp 0
push constant 121
call Output.printChar 1
pop temp 0
push constant 0
return
function Tower.initial 0
push argument 0
pop pointer 0
push constant 0
pop this 2
push constant 0
pop this 3
push constant 0
pop this 4
push constant 0
return
function Tower.cost 0
push argument 0
pop pointer 0
push constant 150
push this 3
push constant 1
add
call Math.multiply 2
push constant 50
sub
return
function Tower.buildTower 0
push argument 0
pop pointer 0
push argument 1
pop this 2
push this 3
push constant 1
add
pop this 3
push constant 20
push constant 10
push this 3
call Math.multiply 2
add
pop this 4
push pointer 0
call Tower.drawTower 1
pop temp 0
push constant 0
return
function Tower.drawTower 0
push argument 0
pop pointer 0
push this 3
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Tower.drawTower1 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Tower.attack 1
push argument 0
pop pointer 0
push this 3
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 1
push constant 2
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 2
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 2
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 2
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push constant 2
push this 4
call Troop.damage 3
return
label IF_FALSE1
push argument 1
push constant 5
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 5
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 5
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 5
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 1
push constant 5
push this 4
call Troop.damage 3
return
label IF_FALSE2
push argument 1
push constant 8
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 8
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 8
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 8
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 1
push constant 8
push this 4
call Troop.damage 3
return
label IF_FALSE3
push argument 1
push constant 11
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 11
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 11
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 11
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push argument 1
push constant 11
push this 4
call Troop.damage 3
return
label IF_FALSE4
push argument 1
push constant 14
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 14
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 14
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 14
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push argument 1
push constant 14
push this 4
call Troop.damage 3
return
label IF_FALSE5
push argument 1
push constant 1
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 1
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 1
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 1
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push argument 1
push constant 1
push this 4
call Troop.damage 3
return
label IF_FALSE6
push argument 1
push constant 3
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 3
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 3
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 3
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push argument 1
push constant 3
push this 4
call Troop.damage 3
return
label IF_FALSE7
push argument 1
push constant 4
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 4
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 4
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 4
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push argument 1
push constant 4
push this 4
call Troop.damage 3
return
label IF_FALSE8
push argument 1
push constant 6
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 6
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 6
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 6
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push argument 1
push constant 6
push this 4
call Troop.damage 3
return
label IF_FALSE9
push argument 1
push constant 7
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 7
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 7
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 7
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push argument 1
push constant 7
push this 4
call Troop.damage 3
return
label IF_FALSE10
push argument 1
push constant 9
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 9
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 9
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 9
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push argument 1
push constant 9
push this 4
call Troop.damage 3
return
label IF_FALSE11
push argument 1
push constant 10
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 10
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 10
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 10
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push argument 1
push constant 10
push this 4
call Troop.damage 3
return
label IF_FALSE12
push argument 1
push constant 12
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 12
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 12
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 12
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push argument 1
push constant 12
push this 4
call Troop.damage 3
return
label IF_FALSE13
push argument 1
push constant 13
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 13
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 13
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 13
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push argument 1
push constant 13
push this 4
call Troop.damage 3
return
label IF_FALSE14
push argument 1
push constant 15
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 15
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 15
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 15
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push argument 1
push constant 15
push this 4
call Troop.damage 3
return
label IF_FALSE15
push constant 0
return
function Tower.canAttack 1
push argument 0
pop pointer 0
push this 3
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 1
push constant 2
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 2
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 2
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 2
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 2
return
label IF_FALSE1
push argument 1
push constant 5
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 5
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 5
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 5
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 5
return
label IF_FALSE2
push argument 1
push constant 8
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 8
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 8
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 8
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 8
return
label IF_FALSE3
push argument 1
push constant 11
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 11
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 11
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 11
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 11
return
label IF_FALSE4
push argument 1
push constant 14
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 14
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 14
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 14
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 14
return
label IF_FALSE5
push argument 1
push constant 1
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 1
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 1
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 1
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 1
return
label IF_FALSE6
push argument 1
push constant 3
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 3
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 3
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 3
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 3
return
label IF_FALSE7
push argument 1
push constant 4
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 4
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 4
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 4
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push constant 4
return
label IF_FALSE8
push argument 1
push constant 6
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 6
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 6
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 6
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push constant 6
return
label IF_FALSE9
push argument 1
push constant 7
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 7
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 7
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 7
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push constant 7
return
label IF_FALSE10
push argument 1
push constant 9
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 9
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 9
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 9
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push constant 9
return
label IF_FALSE11
push argument 1
push constant 10
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 10
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 10
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 10
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push constant 10
return
label IF_FALSE12
push argument 1
push constant 12
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 12
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 12
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 12
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push constant 12
return
label IF_FALSE13
push argument 1
push constant 13
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 13
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 13
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 13
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push constant 13
return
label IF_FALSE14
push argument 1
push constant 15
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
push argument 1
push constant 15
call Troop.rx 2
push this 0
sub
push constant 10
call Math.divide 2
call Math.multiply 2
push argument 1
push constant 15
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
push argument 1
push constant 15
call Troop.ry 2
push this 1
sub
push constant 10
call Math.divide 2
call Math.multiply 2
add
pop local 0
push local 0
push constant 50
lt
push local 0
and
push constant 0
gt
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push constant 15
return
label IF_FALSE15
push constant 0
return
function Tower.drawTower1 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push constant 11
add
push this 1
push constant 23
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 12
add
push this 1
push constant 23
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 13
add
push this 1
push constant 23
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 14
add
push this 1
push constant 23
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 15
add
push this 1
push constant 23
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 16
add
push this 1
push constant 23
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 17
add
push this 1
push constant 23
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 8
add
push this 1
push constant 22
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 9
add
push this 1
push constant 22
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 10
add
push this 1
push constant 22
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 12
add
push this 1
push constant 22
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 16
add
push this 1
push constant 22
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 18
add
push this 1
push constant 22
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 19
add
push this 1
push constant 22
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 20
add
push this 1
push constant 22
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 6
add
push this 1
push constant 21
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 7
add
push this 1
push constant 21
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 8
add
push this 1
push constant 21
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 12
add
push this 1
push constant 21
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 16
add
push this 1
push constant 21
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 20
add
push this 1
push constant 21
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 21
add
push this 1
push constant 21
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 22
add
push this 1
push constant 21
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 4
add
push this 1
push constant 20
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 5
add
push this 1
push constant 20
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 8
add
push this 1
push constant 20
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 11
add
push this 1
push constant 20
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 12
add
push this 1
push constant 20
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 13
add
push this 1
push constant 20
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 14
add
push this 1
push constant 20
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 15
add
push this 1
push constant 20
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 16
add
push this 1
push constant 20
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 17
add
push this 1
push constant 20
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 20
add
push this 1
push constant 20
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 23
add
push this 1
push constant 20
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 24
add
push this 1
push constant 20
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 4
add
push this 1
push constant 19
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 8
add
push this 1
push constant 19
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 9
add
push this 1
push constant 19
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 10
add
push this 1
push constant 19
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 14
add
push this 1
push constant 19
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 18
add
push this 1
push constant 19
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 19
add
push this 1
push constant 19
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 20
add
push this 1
push constant 19
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 24
add
push this 1
push constant 19
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 4
add
push this 1
push constant 18
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 6
add
push this 1
push constant 18
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 7
add
push this 1
push constant 18
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 10
add
push this 1
push constant 18
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 14
add
push this 1
push constant 18
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 18
add
push this 1
push constant 18
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 21
add
push this 1
push constant 18
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 22
add
push this 1
push constant 18
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 24
add
push this 1
push constant 18
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 4
add
push this 1
push constant 17
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 5
add
push this 1
push constant 17
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 6
add
push this 1
push constant 17
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 10
add
push this 1
push constant 17
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 11
add
push this 1
push constant 17
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 12
add
push this 1
push constant 17
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 13
add
push this 1
push constant 17
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 14
add
push this 1
push constant 17
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 15
add
push this 1
push constant 17
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 16
add
push this 1
push constant 17
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 17
add
push this 1
push constant 17
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 18
add
push this 1
push constant 17
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 22
add
push this 1
push constant 17
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 23
add
push this 1
push constant 17
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 24
add
push this 1
push constant 17
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 4
add
push this 1
push constant 16
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 6
add
push this 1
push constant 16
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 8
add
push this 1
push constant 16
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 9
add
push this 1
push constant 16
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 10
add
push this 1
push constant 16
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 18
add
push this 1
push constant 16
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 19
add
push this 1
push constant 16
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 20
add
push this 1
push constant 16
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 22
add
push this 1
push constant 16
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 24
add
push this 1
push constant 16
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 4
add
push this 1
push constant 15
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 6
add
push this 1
push constant 15
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 7
add
push this 1
push constant 15
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 21
add
push this 1
push constant 15
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 22
add
push this 1
push constant 15
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 24
add
push this 1
push constant 15
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 4
add
push this 1
push constant 14
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 5
add
push this 1
push constant 14
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 12
add
push this 1
push constant 14
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 13
add
push this 1
push constant 14
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 14
add
push this 1
push constant 14
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 15
add
push this 1
push constant 14
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 16
add
push this 1
push constant 14
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 23
add
push this 1
push constant 14
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 24
add
push this 1
push constant 14
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 4
add
push this 1
push constant 13
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 5
add
push this 1
push constant 13
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 9
add
push this 1
push constant 13
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 10
add
push this 1
push constant 13
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 11
add
push this 1
push constant 13
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 17
add
push this 1
push constant 13
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 18
add
push this 1
push constant 13
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 19
add
push this 1
push constant 13
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 23
add
push this 1
push constant 13
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 24
add
push this 1
push constant 13
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 6
add
push this 1
push constant 12
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 7
add
push this 1
push constant 12
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 9
add
push this 1
push constant 12
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 19
add
push this 1
push constant 12
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 21
add
push this 1
push constant 12
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 22
add
push this 1
push constant 12
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 8
add
push this 1
push constant 11
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 9
add
push this 1
push constant 11
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 19
add
push this 1
push constant 11
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 20
add
push this 1
push constant 11
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 9
add
push this 1
push constant 10
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 19
add
push this 1
push constant 10
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 9
add
push this 1
push constant 9
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 13
add
push this 1
push constant 9
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 14
add
push this 1
push constant 9
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 15
add
push this 1
push constant 9
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 19
add
push this 1
push constant 9
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 9
add
push this 1
push constant 8
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 10
add
push this 1
push constant 8
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 13
add
push this 1
push constant 8
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 15
add
push this 1
push constant 8
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 18
add
push this 1
push constant 8
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 19
add
push this 1
push constant 8
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 9
add
push this 1
push constant 7
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 10
add
push this 1
push constant 7
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 13
add
push this 1
push constant 7
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 14
add
push this 1
push constant 7
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 15
add
push this 1
push constant 7
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 18
add
push this 1
push constant 7
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 19
add
push this 1
push constant 7
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 9
add
push this 1
push constant 6
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 10
add
push this 1
push constant 6
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 18
add
push this 1
push constant 6
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 19
add
push this 1
push constant 6
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 9
add
push this 1
push constant 5
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 13
add
push this 1
push constant 5
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 14
add
push this 1
push constant 5
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 15
add
push this 1
push constant 5
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 19
add
push this 1
push constant 5
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 9
add
push this 1
push constant 4
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 10
add
push this 1
push constant 4
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 11
add
push this 1
push constant 4
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 12
add
push this 1
push constant 4
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 13
add
push this 1
push constant 4
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 15
add
push this 1
push constant 4
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 16
add
push this 1
push constant 4
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 17
add
push this 1
push constant 4
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 18
add
push this 1
push constant 4
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 19
add
push this 1
push constant 4
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 9
add
push this 1
push constant 3
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 10
add
push this 1
push constant 3
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 12
add
push this 1
push constant 3
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 13
add
push this 1
push constant 3
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 14
add
push this 1
push constant 3
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 15
add
push this 1
push constant 3
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 16
add
push this 1
push constant 3
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 18
add
push this 1
push constant 3
add
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 19
add
push this 1
push constant 3
add
call Screen.drawPixel 2
pop temp 0
push constant 0
return
